name: Run Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.16"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.0
          args: --verbose
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: [1.23, 1.24, 1.25]
        include:
          - os: ubuntu-latest
            go-build: ~/.cache/go-build
          - os: macos-latest
            go-build: ~/Library/Caches/go-build
    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: on
      GOPROXY: https://proxy.golang.org
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/cache@v4
        with:
          path: |
            ${{ matrix.go-build }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run Tests
        run: |
          go test -v -covermode=atomic -coverprofile=coverage.out

      - name: Run Benchmarks
        run: |
          go test -bench=. -benchmem -run=^$ > benchmark_results.txt
          cat benchmark_results.txt

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ matrix.os }}-go${{ matrix.go }}
          path: benchmark_results.txt

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: ${{ matrix.os }},go-${{ matrix.go }}

  benchmark:
    runs-on: ubuntu-latest
    name: Performance Benchmarks
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Benchmarks
        run: |
          echo "Running performance benchmarks..."
          go test -bench=. -benchmem -benchtime=10s -count=3 | tee benchmark_results.txt
          echo ""
          echo "Benchmark Results Summary:"
          echo "=========================="
          grep "^Benchmark" benchmark_results.txt | tail -3

      - name: Upload detailed benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: detailed-benchmark-results
          path: benchmark_results.txt
